# Sweep AI turns bugs & feature requests into code changes (https://sweep.dev)
# For details on our config file, check out our docs at https://docs.sweep.dev/usage/config

# This setting contains a list of rules that Sweep will check for. If any of these rules are broken in a new commit, Sweep will create an pull request to fix the broken rule.
rules:
  - rule: All docstrings and comments should be up to date.
    files: ["src/main.py", "src/utils.py", "src/lib.js", "src/app.js"]
    tests: [test_docstrings, test_comments]
    severity: high
    message: Docstrings and comments are not up to date.
  - rule: Ensure that all imports are organized and placed at the top of the file.
    files: ["*.py", "*.js"]
    tests: [test_imports]
    severity: medium
    message: Imports are not organized or placed at the top of the file.
  - rule: Use consistent naming conventions for variables, functions, and components.
    files: ["*.py", "*.js"]
    tests: [test_naming_conventions]
    severity: medium
    message: Inconsistent naming conventions found.
  - rule: Avoid using hard-coded values and instead use constants or variables.
    files: ["*.py", "*.js"]
    tests: [test_hard_coded_values]
    severity: low
    message: Hard-coded values found. Consider using constants or variables instead.
  - rule: Remove unused imports and variables to keep the code clean and efficient.
    files: ["*.py", "*.js"]
    tests: [test_unused_imports, test_unused_variables]
    severity: medium
    message: Unused imports or variables found.
  - rule: Follow a consistent indentation style throughout the codebase.
    files: ["*.py", "*.js"]
    tests: [test_indentation]
    severity: low
    message: Inconsistent indentation style found.
branch: main
isGHAEnabled: True

# This is the description of your project. It will be used by sweep when creating PRs. You can tell Sweep what's unique about your project, what frameworks you use, or anything else you want.
#
# Example:
#
# description: sweepai/sweep is a python project. The main api endpoints are in sweepai/api.py. Write code that adheres to PEP8.
description: ''

  - rule: Ensure that all imports are organized and placed at the top of the file.
    files: ["*.py", "*.js"]
    tests: [test_imports]
    severity: medium
    message: Imports are not organized or placed at the top of the file.
  - rule: Use consistent naming conventions for variables, functions, and components.
    files: ["*.py", "*.js"]
    tests: [test_naming_conventions]
    severity: medium
    message: Inconsistent naming conventions found.
  - rule: Avoid using hard-coded values and instead use constants or variables.
    files: ["*.py", "*.js"]
    tests: [test_hard_coded_values]
    severity: low
    message: Hard-coded values found. Consider using constants or variables instead.
  - rule: Remove unused imports and variables to keep the code clean and efficient.
    files: ["*.py", "*.js"]
    tests: [test_unused_imports, test_unused_variables]
    severity: medium
    message: Unused imports or variables found.
  - rule: Follow a consistent indentation style throughout the codebase.
    files: ["*.py", "*.js"]
    tests: [test_indentation]
    severity: low
    message: Inconsistent indentation style found.
    files: [*.py, *.js]
sandbox:
  install:
    - trunk init
  check:
    - trunk fmt {file_path} || return 0
    - trunk check --fix --print-failures {file_path}
